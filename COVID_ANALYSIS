
 --select the data that we're gonna use
select location,date,total_cases,new_cases,total_deaths,population
from Portfolio_Project..covid_deaths
order by 1,2

--looking at totalcase vs total deaths and also total case vs population 
--shows likelyhood od dying when you contact covid 
select location,date,total_cases,total_deaths,population , (cast (total_deaths as float) /cast (total_cases as float))*100 as death_petrcentage ,(cast (total_cases as float) /cast (population as float)) as affected_percentage
from Portfolio_Project..covid_deaths
where location like '%France%'
order by 1,2 

-- looking with countries infected with infected rate compared to population

select location,population , max(cast (total_cases as int ))as max_cases ,max(cast (total_cases as float) /cast (population as float))*100 as maxinfected_population
from Portfolio_Project..covid_deaths
group by location,population
order by maxinfected_population desc

--continents with highest deathcount per population 
select location, max(cast(total_deaths as int )) as  death_count
from Portfolio_Project..covid_deaths
where continent is not null
group by location
order by death_count desc
--break things down by continent 

with cte as 
(select continent , location ,max(cast(total_deaths as int)) as total_death_count 
from Portfolio_Project..covid_deaths
where continent is not null 
group by location , continent
) select continent , sum(total_death_count) as td 
from cte
group by continent
order by td desc

--showing continents with highest death count per population 
select continent, max(cast(total_deaths as int )) as  total_death_count
from Portfolio_Project..covid_deaths
where continent is not null
group by continent
order by total_death_count desc

--GLOBAL NUMBERS 
select SUM(new_cases )as total_case_on_day, sum (new_deaths ) as total_deaths_on_day ,
case 
when SUM(new_cases ) = 0 then null 
else sum(new_deaths)/ sum(new_cases) 
end as death_percentage 
from Portfolio_Project..covid_deaths
where continent is not null  
 
 --use vaccination 
 select *
 from  Portfolio_Project..covid_vaccinations
 order by iso_code , continent,date 

 -- looking at total population vs vaccinatuions 
 select dea.continent , dea.location , dea.date , population , vac.new_vaccinations
 from Portfolio_Project..covid_deaths dea 
 join Portfolio_Project..covid_vaccinations vac 
 on dea.location = vac.location 
 and dea.date = vac.date
 where  dea.continent is not null and dea.location like '%India%'
 order by 1,2,3 

 -- total vaccination in india 
 select SUM(cast( vac.new_vaccinations as int ))
 from Portfolio_Project..covid_deaths dea 
 join Portfolio_Project..covid_vaccinations vac 
 on dea.location = vac.location 
 and dea.date = vac.date
 where  dea.continent is not null and dea.location like '%India%'
 
 -- total vaccination in world 
  select SUM(cast( vac.new_vaccinations as bigint ))
 from Portfolio_Project..covid_deaths dea 
 join Portfolio_Project..covid_vaccinations vac 
 on dea.location = vac.location 
 and dea.date = vac.date
 where  dea.continent is not null
 --
  select dea.continent , dea.location , dea.date , population , vac.new_vaccinations , SUM(cast( vac.new_vaccinations as bigint ))
  over (partition by dea.location  order by dea.location , dea.date  ) as roll_over_vaccination_count
 from Portfolio_Project..covid_deaths dea 
 join Portfolio_Project..covid_vaccinations vac 
 on dea.location = vac.location 
 and dea.date = vac.date
 where  dea.continent is not null and dea.location like '%India%' 
 order by 2,3 

  -- when india reached roll over vaccine count of 1 crore  
  with cte_1 as 
  (
  select dea.continent as conti , dea.location as loc , dea.date as dat , dea.population as pop, vac.new_vaccinations as new_vac , SUM(cast( vac.new_vaccinations as bigint ))
  over (partition by dea.location  order by dea.location , dea.date  ) as roll_over_vaccination_count
 from Portfolio_Project..covid_deaths dea 
 join Portfolio_Project..covid_vaccinations vac 
 on dea.location = vac.location 
 and dea.date = vac.date
 where  dea.continent is not null and dea.location like '%India%' 
 )
 select conti , loc , dat , pop, new_vac,roll_over_vaccination_count
 from cte_1
 group by conti , loc , dat , pop, new_vac,roll_over_vaccination_count
 having roll_over_vaccination_count > 10000000 and roll_over_vaccination_count <10400000
 order by 2,3

 -- percentage population vaccinated 
 with popvsvac as 
  (
  select dea.continent as conti , dea.location as loc , dea.date as dat , dea.population as pop, vac.new_vaccinations as new_vac , SUM(cast( vac.new_vaccinations as bigint ))
  over (partition by dea.location  order by dea.location , dea.date  ) as roll_over_vaccination_count
 from Portfolio_Project..covid_deaths dea 
 join Portfolio_Project..covid_vaccinations vac 
 on dea.location = vac.location 
 and dea.date = vac.date
 where  dea.continent is not null and dea.location like '%India%' 
 )
 select conti , loc , dat , pop, new_vac,roll_over_vaccination_count , (roll_over_vaccination_count/pop)*100 as per_peop_vacc
 from popvsvac
-- group by conti , loc , dat , pop, new_vac,roll_over_vaccination_count
 
 order by 2,3





